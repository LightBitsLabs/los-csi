all: build

TAG=v2
DOCKER_REGISTRY := $(or $(DOCKER_REGISTRY),lbdocker:5000)
REPOSITORY=${DOCKER_REGISTRY}/lightbits-mdbook
IMAGE=${REPOSITORY}:${TAG}

override DEFAULT_REL := 0.0.0
override VERSION_RELEASE := $(or $(shell cat VERSION 2>/dev/null),$(DEFAULT_REL))
override RELEASE := $(if $(BUILD_ID),$(VERSION_RELEASE).$(BUILD_ID),$(VERSION_RELEASE))

.PHONY: push-image build-image mdbook-build pandoc-pdf mdbook-serve
push-image:
	@if [ -z "$(DOCKER_REGISTRY)" ] ; then echo "DOCKER_REGISTRY not set, can't push" ; exit 1 ; fi
	@docker push ${IMAGE}

build-image: LOCAL_IMAGE_ID:=$(shell docker images -q $(IMAGE) 2>/dev/null)
build-image: IMAGE_EXISTS_IN_REGISTRY:=$(shell docker pull ${IMAGE} 1>/dev/null; echo $$?)
build-image:
	@# image does not exist locally - build it
	@echo "LOCAL_IMAGE_ID: $(LOCAL_IMAGE_ID)"
	@echo "IMAGE_EXISTS_IN_REGISTRY: $(IMAGE_EXISTS_IN_REGISTRY)"
	if [ "${LOCAL_IMAGE_ID}" = "" ];then\
		echo "image doesn't exists locally - try to pull";\
		if [ ${IMAGE_EXISTS_IN_REGISTRY} = 0 ];then\
			echo "image pulled from registry - do nothing";\
		else\
			echo "image doesn't exists locally and in registry - build it";\
			docker build \
				--build-arg UID=$(shell id -u) \
				--build-arg GID=$(shell id -g) \
				-t ${IMAGE} -f docs/Dockerfile .;\
		fi;\
	else\
		echo "image exists locally - do nothing";\
	fi

mdbook-build: build-image
	@docker run --rm -v `pwd`/docs:/mdbook ${IMAGE} -c "mdbook build" || /bin/true
	
pandoc-pdf: mdbook-build
	@docker run --rm -v `pwd`/docs:/mdbook ${IMAGE} \
		-c "pandoc --pdf-engine=xelatex --toc \
		--from=markdown+grid_tables+pipe_tables+multiline_tables \
		./book/latex/'LightOS CSI Plugin Deployment Guide.md' \
		--to latex \
		-o ./book/latex/lb-csi-plugin-deployment-guide-${RELEASE}.pdf \
		-V block-headings \
		-V colorlinks=true \
		-V linkcolor=blue \
		-V urlcolor=blue \
		-V toccolor=gray \
		--preserve-tabs \
		--metadata-file=metadata.md \
		--template=src/templates/default.latex \
		--listings \
		--lua-filter ./lua-support-yaml-lang.lua \
		&& chown -R $(shell id -u).$(shell id -g) /mdbook/book"

mdbook-serve: build-image
	@docker run -it --rm --name=mdbook -p 3000:3000 -p 3001:3001 -v `pwd`/docs:/mdbook ${IMAGE} \
		-c "mdbook serve --hostname 0.0.0.0"
