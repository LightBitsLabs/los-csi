name: Docker Build Action
on:
  pull_request:
    branches:
      - master
  release:
    types:
      - published
  push:
    branches:
      - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build:
    name: compile, build and push container
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.22
      uses: actions/setup-go@v5
      with:
        go-version: "1.22"
        cache: false
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    # TODO: enable once all linter issues are solved
    # - name: Lint
    #   uses: golangci/golangci-lint-action@v4
    #   with:
    #     args: -p bugs -p unused --timeout=3m

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Make tag
      run: |
        [ "${GITHUB_EVENT_NAME}" == 'pull_request' ] && echo "tag=${GITHUB_HEAD_REF##*/}" >> $GITHUB_ENV || true
        [ "${GITHUB_EVENT_NAME}" == 'release' ] && echo "tag=${GITHUB_REF##*/}" >> $GITHUB_ENV || true
        [ "${GITHUB_EVENT_NAME}" == 'push' ] && echo "tag=latest" >> $GITHUB_ENV || true

    - name: Build and push image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ghcr.io/lightbitslabs/${{ env.IMAGE_NAME }}:${{ env.tag }}